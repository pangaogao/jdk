package test.org.omg.DynamicAny;


/**
* test.org/omg/DynamicAny/DynValueHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /Users/java_re/workspace/8-2-build-macosx-x86_64/jdk8u131/8869/corba/src/share/classes/test.org/omg/DynamicAny/DynamicAny.idl
* Wednesday, March 15, 2017 1:33:58 AM PDT
*/


/**
    * DynValue objects support the manipulation of IDL non-boxed value types.
    * The DynValue interface can represent both null and non-null value types.
    * For a DynValue representing a non-null value type, the DynValue's components comprise
    * the public and private members of the value type, including those inherited from concrete base value types,
    * in the order of definition. A DynValue representing a null value type has no components
    * and a current position of -1.
    * <P>Warning: Indiscriminantly changing the contents of private value type members can cause the value type
    * implementation to break by violating internal constraints. Access to private members is provided to support
    * such activities as ORB bridging and debugging and should not be used to arbitrarily violate
    * the encapsulation of the value type. 
    */
abstract public class DynValueHelper
{
  private static String  _id = "IDL:omg.test.org/DynamicAny/DynValue:1.0";

  public static void insert (test.org.omg.CORBA.Any a, test.org.omg.DynamicAny.DynValue that)
  {
    test.org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static test.org.omg.DynamicAny.DynValue extract (test.org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static test.org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static test.org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = test.org.omg.CORBA.ORB.init ().create_interface_tc (test.org.omg.DynamicAny.DynValueHelper.id (), "DynValue");
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static test.org.omg.DynamicAny.DynValue read (test.org.omg.CORBA.portable.InputStream istream)
  {
      throw new test.org.omg.CORBA.MARSHAL ();
  }

  public static void write (test.org.omg.CORBA.portable.OutputStream ostream, test.org.omg.DynamicAny.DynValue value)
  {
      throw new test.org.omg.CORBA.MARSHAL ();
  }

  public static test.org.omg.DynamicAny.DynValue narrow (test.org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof test.org.omg.DynamicAny.DynValue)
      return (test.org.omg.DynamicAny.DynValue)obj;
    else if (!obj._is_a (id ()))
      throw new test.org.omg.CORBA.BAD_PARAM ();
    else
    {
      test.org.omg.CORBA.portable.Delegate delegate = ((test.org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      test.org.omg.DynamicAny._DynValueStub stub = new test.org.omg.DynamicAny._DynValueStub ();
      stub._set_delegate(delegate);
      return stub;
    }
  }

  public static test.org.omg.DynamicAny.DynValue unchecked_narrow (test.org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof test.org.omg.DynamicAny.DynValue)
      return (test.org.omg.DynamicAny.DynValue)obj;
    else
    {
      test.org.omg.CORBA.portable.Delegate delegate = ((test.org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      test.org.omg.DynamicAny._DynValueStub stub = new test.org.omg.DynamicAny._DynValueStub ();
      stub._set_delegate(delegate);
      return stub;
    }
  }

}
